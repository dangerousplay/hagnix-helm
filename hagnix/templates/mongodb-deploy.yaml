apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    app: mongodb
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: 1
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      name: mongodb
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: {{ .Values.backend.mongodb.image }}
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: {{ .Values.backend.mongodb.port }}
        env:
        - name: MONGODB_USERNAME
          value: {{ .Values.backend.mongodb.root }}
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MONGO_PASSWORD
              name: secrets
        - name: MONGODB_DATABASE
          value: {{ .Values.backend.mongodb.database }}
        {{ if .Values.backend.credentials.create_default -}}
        volumeMounts:
          - mountPath: /docker-entrypoint-initdb.d/
            name: scripts
        {{- end }}
        {{ if eq .Values.cloud "GKE" }}
          - mountPath: /data/db
            name: data
        {{ end -}}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.backend.mongodb.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: {{ .Values.backend.mongodb.port }}
          initialDelaySeconds: 30
          periodSeconds: 1
      volumes:
        - name: scripts
          configMap:
            name: mongodb
        {{ if eq .Values.cloud "GKE" -}}
        - name: data
          gcePersistentDisk:
            pdName: mongo-disk
            fsType: ext4
        {{- end }}
#        volumeMounts:
#          - mountPath: /data/db
#            name: data
#      volumes:
#        - name: data
#          persistentVolumeClaim:
#            claimName: mongodb-volv-pvc
      restartPolicy: Always
  selector:
    matchLabels:
      app: mongodb
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: mongodb-volv-pvc
#  labels:
#    app: mongodb
#spec:
#  accessModes:
#  - ReadWriteMany
#  resources:
#    requests:
#      storage: 1Gi